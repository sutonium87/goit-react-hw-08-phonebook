{"version":3,"file":"static/js/111.1142e6cb.chunk.js","mappings":"qcAwBMA,GAAeC,EAAAA,EAAAA,KAGd,SAASC,IAEd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAG5BC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBACAC,EAAOF,EAAMG,cAFA,kBAKXX,GACJY,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAEnCE,SAVe,OAWjBC,EAAAA,OAAAA,QAAA,mBAA2BR,EAAKI,SAASD,MAAME,MAA/C,MACAL,EAAKS,QAZY,gDAcjBD,EAAAA,OAAAA,QAAe,4CAdE,yDAAH,sDAmBlB,OACE,SAACE,EAAA,EAAD,CAAeC,MAAOxB,EAAtB,UACE,UAACyB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,WAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,SAAwC,aAGxC,UAACX,EAAA,EAAD,CACEH,UAAU,OACVe,SAAU/B,EACVgC,YAAU,EACVZ,GAAI,CAAEa,GAAI,GAJZ,WAOE,SAACC,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAIX,SAACR,EAAA,EAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAIf,SAACG,EAAA,EAAD,CACEC,SAAS,SAACC,EAAA,EAAD,CAAUtC,MAAM,WAAWuC,MAAM,YAC1CR,MAAM,iBAIR,SAACS,EAAA,EAAD,CACEL,KAAK,SACLN,WAAS,EACTP,QAAQ,YACRV,GAAI,CAAEa,GAAI,EAAGgB,GAAI,GAJnB,SAMqB,UAAlBpD,GAA4B,SAACqD,EAAA,EAAD,KAAa,8BAAE,eAI9C,UAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,WACE,SAACD,EAAA,GAAD,CAAME,MAAI,EAACC,IAAE,EAAb,UACE,SAACC,EAAA,EAAD,CAAMC,KAAK,IAAI1B,QAAQ,QAAvB,SAA+B,wBAIjC,SAACqB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACE,EAAA,EAAD,CACEC,KAAK,IACL1B,QAAQ,QACR2B,QAAS,kBAAM9D,EAAS,YAAf,EAHX,SAKG,kDASlB,C,cC/GD,EAhBc,WAEZ,OACE,iCAEE,SAAC+D,EAAA,EAAD,WACE,2BAAO,aAIT,SAAClE,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["// Import necessary dependencies and components\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectIsAuthLoading } from 'redux/auth/selectors';\nimport { Loader } from 'components/Loader/Loader';\n\n// Create a default MUI theme\nconst defaultTheme = createTheme();\n\n// Define the LoginForm functional component\nexport function LoginForm() {\n  // Define dispatch, navigate, and authOperation using React hooks\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authOperation = useSelector(selectIsAuthLoading);\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    try {\n      // Dispatch login action with user credentials\n      await dispatch(\n        login({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      Notify.success(`Welcome, ${form.elements.email.value}!`);\n      form.reset();\n    } catch (error) {\n      Notify.failure('Login failed. Please enter correct data!');\n    }\n  };\n\n  // JSX structure for the LoginForm component\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: '#1976d2' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            {/* Email input field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n\n            {/* Password input field */}\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n\n            {/* Remember me checkbox */}\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n\n            {/* Submit button */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {authOperation === 'login' ? <Loader /> : <>Sign In</>}\n            </Button>\n\n            {/* Forgot password and Sign Up links */}\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link\n                  href=\"#\"\n                  variant=\"body2\"\n                  onClick={() => navigate('/register')}\n                >\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","// Import the font styles for different weights of the Ubuntu font\nimport '@fontsource/ubuntu/400.css';\nimport '@fontsource/ubuntu/500.css';\nimport '@fontsource/ubuntu/700.css';\n\n// Import the LoginForm component from the specified path\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\n// Import the Helmet component from the react-helmet library\nimport { Helmet } from 'react-helmet';\n\n// Define the Login component\nconst Login = () => {\n  // Render the Login component\n  return (\n    <>\n      {/* Set the page title using Helmet */}\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n\n      {/* Render the LoginForm component */}\n      <LoginForm />\n    </>\n  );\n};\n\n// Export the Login component\nexport default Login;\n"],"names":["defaultTheme","createTheme","LoginForm","dispatch","useDispatch","navigate","useNavigate","authOperation","useSelector","selectIsAuthLoading","handleSubmit","event","preventDefault","form","currentTarget","login","email","elements","value","password","unwrap","Notify","reset","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","onSubmit","noValidate","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","color","Button","mb","Loader","Grid","container","item","xs","Link","href","onClick","Helmet"],"sourceRoot":""}